"""Added many-to-many relationship for notes and sections

Revision ID: ad5cb8b50d98
Revises: d867530118fc
Create Date: 2025-10-17 21:52:26.102268

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'ad5cb8b50d98'
down_revision = 'd867530118fc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('note_sections',
    sa.Column('note_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ),
    sa.PrimaryKeyConstraint('note_id', 'section_id')
    )
    with op.batch_alter_table('notes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('section', sa.String(length=20), nullable=True))
        batch_op.drop_constraint(batch_op.f('notes_ibfk_3'), type_='foreignkey')
        batch_op.drop_column('section_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('notes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('section_id', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('notes_ibfk_3'), 'sections', ['section_id'], ['id'])
        batch_op.drop_column('section')

    op.drop_table('note_sections')
    # ### end Alembic commands ###
